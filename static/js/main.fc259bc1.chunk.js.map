{"version":3,"sources":["components/navbar.js","components/enviarOrden.js","components/orden.js","components/inputName.js","components/showMenu.js","components/ordenar.js","FirestoreConfig.js","components/Todos.js","components/cocina.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","href","title","react_router_dom","to","enviarOrden","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateInput","e","setState","defineProperty","target","item","value","addData","console","log","firebase","firestore","collection","add","orden","date","Date","then","docRef","id","catch","error","state","data","onClick","Component","Comanda","order","map","menu","i","key","price","components_enviarOrden","React","input","name","addName","bind","assertThisInitialized","preventDefault","_this2","type","placeholder","onChange","updateName","required","MenuList","submit","Name","Price","orders","concat","toConsumableArray","total","sumaTotal","priceArr","el","items","reduce","sum","result","inputName","MenuData","MenuDetail","index","src","Image","Menu","showMenu","firebaseAuth","apiKey","authDomain","projectId","Todos","get","snapShots","docs","doc","class","scope","undefined","Films","Todos_Todos","App","navbar","react_router","path","render","ordenar","cocina","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc259bc1.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navbar = (props) => (\r\n    <nav>\r\n    <h2 className=\"logo\"><a className=\"logo-link\" href=\"#\">{props.title}</a></h2>\r\n    <ul className=\"nav-menu\">\r\n      \r\n      <li><NavLink className=\"nav-menu__link\" to=\"/ordenar\">Ordenar</NavLink></li>\r\n      <li><NavLink className=\"nav-menu__link\" to=\"/cocina\">Cocina</NavLink></li>\r\n   </ul>\r\n  </nav>\r\n  \r\n);\r\nexport default Navbar;\r\n","import React, { Component } from 'react'\r\nimport firebase from 'firebase'; \r\n\r\nclass enviarOrden extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            item:'',\r\n            data: []\r\n        };\r\n    }\r\n\r\nupdateInput = e => {\r\n    this.setState({\r\n        [e.target.item]:e.target.value\r\n    });\r\n}\r\n\r\naddData = () => {\r\n    console.log(this.props)\r\n        let db = firebase.firestore();\r\n            db.collection('todos').add({\r\n                orden: this.props.orden,\r\n                date: new Date(),\r\n              })\r\n                .then((docRef) => {\r\n                  console.log('Document written with ID: ', docRef.id);\r\n                })\r\n                .catch(function(error) {\r\n                  console.error('Error adding document: ', error);\r\n                }); \r\n};\r\n\r\n\r\n    render (){\r\n       return(\r\n           <div>\r\n               <button onClick={this.addData}>Enviar</button>\r\n           </div>\r\n       )\r\n    }\r\n}\r\n\r\nexport default enviarOrden;","import React from \"react\";\r\nimport EnviarOrden from './enviarOrden';\r\n\r\nclass Comanda extends React.Component{\r\n    render(){\r\n        const order = this.props.orden.map((menu, i) => {\r\n            return(\r\n                <div>\r\n                    <ul key={i} className=\"list-group col-md-12\">\r\n                        <li className=\" d-flex justify-content-between align-items-center col-md-12\">\r\n                            <p>{menu.item}</p>\r\n                            <span className=\"btn-success\">{\"$\"+ menu.price}</span>\r\n                            <div></div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                \r\n                )\r\n            })\r\n            return(\r\n                <div>\r\n                {order}\r\n                <EnviarOrden orden={this.props.orden} />\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Comanda;","import React from \"react\";\r\n\r\nclass input extends React.Component{\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            name : \"\"\r\n        }\r\n\r\n        this.addName = this.addName.bind(this);\r\n    }\r\n\r\n    updateName ( key, value){\r\n        this.setState ({\r\n            [key]:value\r\n        })\r\n    }\r\n\r\n    addName (e){\r\n        e.preventDefault(e);\r\n        this.setState({\r\n            name: this.state.name + e.target.value\r\n        });\r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <form>\r\n            <div className= \"col-md-12  justify-content-center\" >\r\n            <br/>\r\n            <input \r\n                type={\"text\"} \r\n                id={\"clientName\"} \r\n                value={this.state.name}\r\n                className=\"form-control form-control-lg col-md-12 background\" \r\n                placeholder=\"Nombre del cliente\" \r\n                onChange={e => this.updateName('name', e.target.value)} \r\n                required />\r\n            </div>\r\n        </form> \r\n    )\r\n}\r\n} \r\n\r\nexport default input;","import React, {Component} from 'react';\r\nimport MenuData from './menu.json';\r\nimport Comanda from '../components/orden';\r\nimport Input from '../components/inputName'\r\n\r\n\r\nclass MenuList extends Component{\r\n\r\n\t\tconstructor(props){\r\n\t\t\tsuper(props);\r\n\t\t\tthis.state = {\r\n\t\t\t   orders:[],\r\n\t\t\t   total:0\r\n\t\t\t}; \r\n\t\t\tthis.submit=this.submit.bind (this);\r\n\t\t\tthis.sumaTotal=this.sumaTotal.bind(this);      \r\n\t};\r\n\t\r\n\tsubmit = (menu) => {\r\n\t\t   const order = {\r\n\t\t   \"item\": menu.Name,\r\n\t\t   \"price\": menu.Price\r\n\t\t }\r\n\t this.setState({\r\n\t\t orders:[...this.state.orders,order]\r\n\t });\r\n\t \r\n\t};\t\r\n\r\n\r\n\tsumaTotal (){\r\n\t\tconst priceArr=this.state.orders.map((el)=> el.price)\r\n\t\tconsole.log(this.state.orders)\r\n\t\tconst items=priceArr.reduce((sum,result)=>{\r\n\t\t\treturn sum + result;\r\n\t\t}, 0);\r\n\t\tthis.setState({\r\n\t\t\ttotal:items\r\n\t\t});\r\n\t};\r\n\r\n\trender (){\r\n\t\tconsole.log(this.state.total);\r\n\t//\tconsole.log(this.state.orders)\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<div className=\"inputName\"><Input/></div>\r\n\t\t\t\t<div className= \"row\">\r\n\t\t\t\t\t<div className= \"col menuCol\"> \r\n\t\t\t\t\t\t<div className=\" col-md-12 btnCont\">{MenuData.map((MenuDetail,index)=>\r\n\t\t\t\t\t\t\t\t\t<button className=\"btnMenu\" onClick={() => {this.submit(MenuDetail)}}>\r\n\t\t\t\t\t\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"titleCard\">\r\n\t\t\t\t\t\t\t\t\t\t\t<img className=\"imageCard\" src={MenuDetail.Image}></img>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"card-title\">{MenuDetail.Name}</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"card-price right\">${MenuDetail.Price}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col ordenCol\">\r\n\t\r\n\t\t\t\t\t<Comanda orden={this.state.orders}/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button onClick={this.sumaTotal}>Total: ${this.state.total}</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MenuList;","import React from 'react';\r\nimport MenuList from './showMenu';\r\n\r\n\r\n\r\nconst Menu = (props) => (\t\r\n<div><MenuList/></div>\r\n\r\n\t\t);\r\n\r\nexport default Menu;\r\n\r\n","import * as firebase from 'firebase/app';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAcNdaAXTEDJjcKa59s2HGUXM868K4LMo0\",\r\n    authDomain: \"nuevoburger-97064.firebaseapp.com\",\r\n    projectId: \"nuevoburger-97064\",\r\n};\r\n\r\nconst firebaseAuth = firebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebaseAuth; ","import React, {Component} from 'react';\r\nimport firebase from '../FirestoreConfig'; \r\n\r\n\r\n\r\nexport default class Todos extends Component{\r\n    state = {\r\n        items:[]\r\n    }\r\n    componentDidMount(){\r\n         let db = firebase.firestore();\r\n        db.collection('todos').get().then((snapShots)=>{\r\n            this.setState({\r\n                items:snapShots.docs.map(doc=>{\r\n                    return{id:doc.id,data:doc.data()}\r\n                   \r\n                })\r\n            })\r\n    \r\n        \r\n    }, error=>{console.error();\r\n    });\r\n}\r\n    \r\n    render(){\r\n        const {items}= this.state;\r\n        \r\n        return(\r\n            <div>\r\n<table class=\"table\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">Nombre</th>\r\n      <th scope=\"col\">Alimento</th>\r\n      <th scope=\"col\">Eliminar</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {items &&items!==undefined ? items.map((item,key)=>(\r\n<tr key={key}>\r\n    \r\n    <td>{item.data.item}</td>\r\n    <td>{item.data.item}</td>\r\n    <td><button>Eliminar</button></td>\r\n</tr>\r\n      )):null}\r\n  </tbody>\r\n  </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport Todos from './Todos';\r\nconst Films = (props) => (\r\n\t<div className =\"\">\r\n\t<div className =\"container cocinaCont\">\r\n\t<h2> Cocina </h2>\r\n\t<Todos/>\r\n\t</div>\r\n\t</div>\r\n);\r\n\r\nexport default Films;","import React, {Component} from 'react';\r\nimport {BrowserRouter,Route} from 'react-router-dom';\r\nimport'./css/style.css';\r\nimport Navbar from './components/navbar';\r\nimport Ordenar from './components/ordenar';\r\nimport Cocina from './components/cocina'\r\n\r\n\r\n\r\nclass App extends Component {\r\nrender() {\r\n  return (\r\n  <BrowserRouter>\r\n    <div className=\"App\">\r\n     <Navbar title=\"Burguer Queen\"/>\r\n\r\n\t <Route path=\"/ordenar\" render={() =><Ordenar/>}/>\r\n\t <Route path=\"/cocina\" render={()=> <Cocina />}/>\r\n    \r\n    </div>\r\n\t</BrowserRouter>\r\n  );\r\n}\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}